#  NOTE(koekeishiya): A list of all built-in modifier and literal keywords can
#                     be found at https://github.com/koekeishiya/skhd/issues/1
#
#                     A hotkey is written according to the following rules:
#
#                       hotkey       = <mode> '<' <action> | <action>
#
#                       mode         = 'name of mode' | <mode> ',' <mode>
#
#                       action       = <keysym> '[' <proc_map_lst> ']' | <keysym> '->' '[' <proc_map_lst> ']'
#                                      <keysym> ':' <command>          | <keysym> '->' ':' <command>
#                                      <keysym> ';' <mode>             | <keysym> '->' ';' <mode>
#
#                       keysym       = <mod> '-' <key> | <key>
#
#                       mod          = 'modifier keyword' | <mod> '+' <mod>
#
#                       key          = <literal> | <keycode>
#
#                       literal      = 'single letter or built-in keyword'
#
#                       keycode      = 'apple keyboard kVK_<Key> values (0x3C)'
#
#                       proc_map_lst = * <proc_map>
#
#                       proc_map     = <string> ':' <command> | <string>     '~' |
#                                      '*'      ':' <command> | '*'          '~'
#
#                       string       = '"' 'sequence of characters' '"'
#
#                       command      = command is executed through '$SHELL -c' and
#                                      follows valid shell syntax. if the $SHELL environment
#                                      variable is not set, it will default to '/bin/bash'.
#                                      when bash is used, the ';' delimeter can be specified
#                                      to chain commands.
#
#                                      to allow a command to extend into multiple lines,
#                                      prepend '\' at the end of the previous line.
#
#                                      an EOL character signifies the end of the bind.
#
#                       ->           = keypress is not consumed by skhd
#
#                       *            = matches every application not specified in <proc_map_lst>
#
#                       ~            = application is unbound and keypress is forwarded per usual, when specified in a <proc_map>
#
#  NOTE(koekeishiya): A mode is declared according to the following rules:
#
#                       mode_decl = '::' <name> '@' ':' <command> | '::' <name> ':' <command> |
#                                   '::' <name> '@'               | '::' <name>
#
#                       name      = desired name for this mode,
#
#                       @         = capture keypresses regardless of being bound to an action
#
#                       command   = command is executed through '$SHELL -c' and
#                                   follows valid shell syntax. if the $SHELL environment
#                                   variable is not set, it will default to '/bin/bash'.
#                                   when bash is used, the ';' delimeter can be specified
#                                   to chain commands.
#
#                                   to allow a command to extend into multiple lines,
#                                   prepend '\' at the end of the previous line.
#
#                                   an EOL character signifies the end of the bind.

# add an on_enter command to the default mode
# :: default : chunkc border::color 0xff775759
#
# defines a new mode 'test' with an on_enter command, that captures keypresses
# :: test @ : chunkc border::color 0xff24ccaa
#
# from 'default' mode, activate mode 'test'
# cmd - x ; test
#
# from 'test' mode, activate mode 'default'
# test < cmd - x ; default
#
# launch a new terminal instance when in either 'default' or 'test' mode
# default, test < cmd - return : open -na /Applications/Terminal.app

# application specific bindings
#
# cmd - n [
#     "kitty"       : echo "hello kitty"
#     *             : echo "hello everyone"
#     "qutebrowser" : echo "hello qutebrowser"
#     "terminal"    ~
#     "finder"      : false
# ]

# specify a file that should be included as an additional config-file.
# treated as an absolutepath if the filename begins with '/' otherwise
# the file is relative to the path of the config-file it was loaded from.
#
# .load "/Users/Koe/.config/partial_skhdrc"
# .load "partial_skhdrc"

# prevent skhd from monitoring events for specific applications.
#
# .blacklist [
#    "kitty"
#    "terminal"
#    "qutebrowser"
# ]

# Window managing

## Focusing
lalt - j : yabai -m window --focus south
lalt - k : yabai -m window --focus north
lalt - h : yabai -m window --focus west
lalt - l : yabai -m window --focus east

lalt - o : yabai -m window --focus uncle
lalt - i : yabai -m window --focus first_nephew
 
## Swapping around in space
lalt + shift - h : yabai -m window --swap west
lalt + shift - j : yabai -m window --swap south
lalt + shift - k : yabai -m window --swap north
lalt + shift - l : yabai -m window --swap east

lalt + shift - o : yabai -m window --swap largest
lalt + shift - i : yabai -m window --swap smallest

## Moving windows to different spaces
shift + lalt - 1 : yabai -m window --space 1
shift + lalt - 2 : yabai -m window --space 2
shift + lalt - 3 : yabai -m window --space 3
shift + lalt - 4 : yabai -m window --space 4
shift + lalt - 5 : yabai -m window --space 5

## Moving to / sending windows to displays
ctrl + lalt - 1 : yabai -m display --focus 1
ctrl + lalt - 2 : yabai -m display --focus 2

meh - 1 : yabai -m window --display 1
meh - 2 : yabai -m window --display 2

## Take window out of management
lalt - t : yabai -m window --toggle float;\
           yabai -m window --grid 4:4:1:1:2:2

## Make a floating window cover the full screen
lalt - f : yabai -m window --toggle zoom-fullscreen

## Close the window
lalt - q : yabai -m window --close

## Space stuff
shift + lalt - e : yabai -m window --toggle split
shift + lalt - r : yabai -m space --rotate 90
shift + lalt - v : yabai -m space --mirror y-axis

## Reset sizing
shift + lalt - 0 : yabai -m space --balance

# Application opening/switching mode
:: apps @
hyper - o ; apps
apps < escape ; default

apps < n : open ~ && skhd -k "escape"
apps < f : open /Applications/Firefox.app && skhd -k "escape"
apps < k : open /Applications/kitty.app && skhd -k "escape"
apps < m : open /System/Applications/Messages.app && skhd -k "escape"
apps < shift - m : open /System/Applications/Mail.app && skhd -k "escape"
apps < s : open /Applications/Spotify.app && skhd -k "escape"
apps < shift - s : open /Applications/Slack.app && skhd -k "escape"
apps < shift - o : open /Applications/Obsidian.app && skhd -k "escape"

# Pomodoro shortcuts
:: pomo @
hyper - p ; pomo
pomo < escape ; default

pomo < p : pomo start && skhd -k "escape"
pomo < x : pomo cancel && skhd -k "escape"

# Shortcut to create a new kitty term on the fly
lalt - return : kitty --single-instance --listen-on=unix:"$TMPDIR/kitty" "$HOME"
